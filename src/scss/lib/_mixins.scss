@use "functions.scss" as *;

// общий сброс элемента
%reset-input {
	font-size: var(--size);
	box-sizing: border-box;
	vertical-align: middle;
	display: inline-block;
	font-family: inherit;
	white-space: normal;
	appearance: none;
	background: none;
	box-shadow: none;
	line-height: 1.1;
	max-width: none;
	outline: none;
	border: none;
	min-width: 0;
	padding: 0;
}

// сброс кнопки
%reset-button {
	@extend %reset-input;
	text-decoration: none;
	width: fit-content;
	cursor: pointer;
	color: inherit;
}


// спрятать элемент
@mixin hide {
	appearance: none;
	overflow: hidden;
	border: none;
	margin: 0;
	padding: 0;
	height: 1px;
	position: absolute;
	top: -9999px;
	left: -9999px;
}

@mixin outline($color: grey) { 
	outline: 1px dotted $color; 
} 

// показать текущий диапазон
@mixin screen-media($color: #777) {
	$breakpoints: (
		xxxxlg: 1920,
		xxxlg: 1680,
		xxlg: 1440,
		xlg: 1280,
		lg: 1100,
		md: 960,
		sm: 780,
		xs: 640,
		xxs: 480,
		xxxs: 360
	);
	& {
		position: relative;		
		&::before {
			content: "";
			display: block;
			text-align: center;
			position: fixed;
			top: 30px; right: 5px;
			z-index: 9999;
			min-height: 16px;
			min-width: 40px;
			padding: 0 10px;
			font: 12px/16px Arial, sans-serif;
			color: $color;
			background-color: #ffffd3;
			border: 1px solid #bbb;
		}
		@each $var, $size in $breakpoints {
			@media screen and (max-width: #{$size}px) {
				&::before {
					content: "#{$var}:#{$size}";
				}
			}
		}
	}
}

// подключить шрифт 
@mixin font-face($file, $family, $weight: "normal", $style: "normal", $folder: "fonts/") { 
	@font-face { 
		font-family: $family;
		src: url("#{$folder}#{$file}.woff") format('woff'),
			url("#{$folder}#{$file}.woff2") format('woff2'),
			url("#{$folder}#{$file}.ttf")  format('truetype');
		font-weight: $weight;
		font-style: $style;
	} 
}
  	
// вставить символ псевдографики 
@mixin inssymbol( $font, $symbol: '\0000', $pseudo: "after") { 
	&:#{$pseudo} { 
		content: "#{$symbol}"; 
		font-family: $font; 
		vertical-align: middle; 
		@content; 
	} 
} 
  	
// заполнить родительский блок 
@mixin fill($spacing: 0, $index: 0) { 
	position: absolute; 
	display: block; 
	box-sizing: border-box; 
	top: $spacing; bottom: $spacing; 
	left: $spacing; right: $spacing; 
	z-index: $index; 
} 
  	
// сохранять пропрорции 
@mixin aspect-ratio($w: 1, $h: 1) { 
	display: block; 
	position: relative; 
	$ratio: calc($h / $w); 
	&:before { 
		content: ''; 
		display: block; 
		padding-top: (100% * $ratio); 
	} 
	> * { @include fill(); } 
} 

// плавное изменение размера на заданном диапазоне ширины экрана (через медиазапросы)
@mixin range($currentValue, $targetValue, $currentScreen, $targetScreen, $property: 'font-size') {
	$diffValue: num($currentValue) - num($targetValue);
	$diffScreen: num($currentScreen) - num($targetScreen);

	@media (max-width: $currentScreen) {
		#{$property}: calc(#{$targetValue} + #{$diffValue} * ((100vw - #{$targetScreen}) / #{$diffScreen}));
	}
	
	@media (max-width: $targetScreen) {
		#{$property}: $targetValue;
	}
}